/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.pruebas;


import javax.swing.JOptionPane;
import tipografias.Fuentes;

//librerias para exportar en excel
import java.io.*;
//import java.text.DecimalFormat;
import java.util.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.*;
//import org.apache.poi.hssf.usermodel.*;
//import org.apache.poi.xssf.usermodel.*;

//librerias que deberian ir en el controlador de excel
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author dark_
 */
public class chiCuadrado extends javax.swing.JInternalFrame {
    
    // --- VARIABLES ------------crea variables para el modelo de la tabla y el tipo de fuente del formulario

    private final Fuentes tipoFuente; // para llamar el metodo de tipografias personalizadas
    
    Workbook wb; // para trabajar importar y/o exportar archivos en xls
    
    JFileChooser selecArchivo = new JFileChooser();
    File archivo;
    int contAccion = 0;
    double resultadoGlobal;

    /**
     * Creates new form chiCuadrado
     */
    public chiCuadrado() {
        initComponents();
        
        // SE PERSONALIZA TODO EL TEXTO CON FUENTES DEL PAQUETE TIPOGRAFIA
        tipoFuente = new Fuentes(); // crea tipo de fuente para usar atributos y procedimientos
        ///----------------///----- ETIQUETAS -----///---------------///
        etiq_tituloChiCuadrado_.setFont(tipoFuente.fuente(tipoFuente.GOD,0,24));
        etiq_resultado_.setFont(tipoFuente.fuente(tipoFuente.GOD,0,18));
        etiq_filaChi_.setVisible(false);
        etiq_colChi_.setVisible(false);
        etiq_aceptacion_.setVisible(false);
        etiq_buscarChi1_.setVisible(false);
        etiq_buscarChi2_.setVisible(false);
        etiq_buscarChi3_.setVisible(false);
        etiq_resultado_.setVisible(false);
        ///----------------///----- TABLAS -----///---------------///
        tabla_numerosAleatorios_.setVisible(false); 
        ///----------------///----- TEXTO -----///---------------///
        txt_aceptacion_.setVisible(false); 
        txt_valorChi_.setVisible(false);
        ///----------------///----- BOTONES -----///---------------///
        btn_resultado_.setVisible(false);
        btn_calcular_.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_importar_ = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_numerosAleatorios_ = new javax.swing.JTable();
        etiq_tituloChiCuadrado_ = new javax.swing.JLabel();
        etiq_aceptacion_ = new javax.swing.JLabel();
        etiq_buscarChi1_ = new javax.swing.JLabel();
        etiq_buscarChi2_ = new javax.swing.JLabel();
        etiq_buscarChi3_ = new javax.swing.JLabel();
        etiq_filaChi_ = new javax.swing.JLabel();
        txt_aceptacion_ = new javax.swing.JTextField();
        btn_resultado_ = new javax.swing.JButton();
        etiq_resultado_ = new javax.swing.JLabel();
        etiq_colChi_ = new javax.swing.JLabel();
        txt_valorChi_ = new javax.swing.JTextField();
        btn_calcular_ = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        btn_importar_.setText("IMPORTAR desde EXCEL");
        btn_importar_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_importar_ActionPerformed(evt);
            }
        });

        tabla_numerosAleatorios_.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_numerosAleatorios_.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabla_numerosAleatorios_);
        if (tabla_numerosAleatorios_.getColumnModel().getColumnCount() > 0) {
            tabla_numerosAleatorios_.getColumnModel().getColumn(0).setResizable(false);
            tabla_numerosAleatorios_.getColumnModel().getColumn(1).setResizable(false);
        }

        etiq_tituloChiCuadrado_.setText("PRUEBA CHI CUADRADO");

        etiq_aceptacion_.setText("Digite el nivel de aceptacion (solo numero no escribir %): ");

        etiq_buscarChi1_.setText("la columna es el numero mas cercano a:");

        etiq_buscarChi2_.setText("y la fila es el numero mas cercano a:");

        etiq_buscarChi3_.setText("Valor encontrado en tabla chi:");

        etiq_filaChi_.setText("fila M");

        btn_resultado_.setText("Resultado");
        btn_resultado_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resultado_ActionPerformed(evt);
            }
        });

        etiq_resultado_.setText("RESULTADO");

        etiq_colChi_.setText("col M");

        btn_calcular_.setText("Calcular");
        btn_calcular_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_calcular_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etiq_tituloChiCuadrado_)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiq_aceptacion_)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(btn_importar_))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(etiq_resultado_))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(etiq_buscarChi3_)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_valorChi_, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_resultado_))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(etiq_buscarChi1_)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(etiq_colChi_))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(etiq_buscarChi2_)
                        .addGap(18, 18, 18)
                        .addComponent(etiq_filaChi_))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(txt_aceptacion_, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btn_calcular_)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(etiq_tituloChiCuadrado_)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_importar_)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiq_aceptacion_)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_aceptacion_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_calcular_))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiq_buscarChi1_)
                    .addComponent(etiq_colChi_))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiq_buscarChi2_)
                    .addComponent(etiq_filaChi_))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiq_buscarChi3_)
                    .addComponent(btn_resultado_)
                    .addComponent(txt_valorChi_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etiq_resultado_)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_importar_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_importar_ActionPerformed
        
        contAccion++;
        if( contAccion == 1 ){ agregarFiltro(); }
        
        if( selecArchivo.showDialog(null, "Seleccionar archivo" ) == JFileChooser.APPROVE_OPTION ){
            archivo = selecArchivo.getSelectedFile();
            if ( archivo.getName().endsWith("xls") || archivo.getName().endsWith("xlsx")  ) {
                JOptionPane.showMessageDialog(null, importar( archivo, tabla_numerosAleatorios_ ) );
            } else {
                JOptionPane.showMessageDialog( null, "Elija un formato de Excel valido" );
            }
        }
    }//GEN-LAST:event_btn_importar_ActionPerformed

    private void btn_resultado_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resultado_ActionPerformed
        if( "".equals(txt_valorChi_.getText()) ){
            JOptionPane.showMessageDialog(null, "Debe digitar el valor encontrado en tabla chi");
        }else{
            double valorTxt = Double.parseDouble( txt_valorChi_.getText() );
            if( valorTxt > resultadoGlobal ){
                JOptionPane.showMessageDialog(null, "El valor de la tablaChi es: "+valorTxt+" y es mayor que el valor encontrado: "+resultadoGlobal+", \n por lo tanto es RECHAZADO");
                etiq_resultado_.setText("RECHAZADO valor encontrado es de: "+resultadoGlobal);
                etiq_resultado_.setVisible(true);
            }else{
                JOptionPane.showMessageDialog(null, "El valor de la tablaChi es: "+valorTxt+" y es menor que el valor encontrado: "+resultadoGlobal+", \n por lo tanto es ACEPTADO");
                etiq_resultado_.setText("ACEPTADO! valor encontrado es de: "+resultadoGlobal);
                etiq_resultado_.setVisible(true);
            }
        }      
    }//GEN-LAST:event_btn_resultado_ActionPerformed

    private void btn_calcular_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_calcular_ActionPerformed
        if( "".equals(txt_aceptacion_.getText()) ){
            JOptionPane.showMessageDialog(null, "Debe digitar el valor del nivel de confianza/aceptacion");
        }else{
            calcular();
        }  
    }//GEN-LAST:event_btn_calcular_ActionPerformed

    
    // ----------- FUNCIONES Y PROCEDIMIENTOS -------------------------------------------/////////////////////////////////
    public void calcular(){
        int numFilas = tabla_numerosAleatorios_.getRowCount();
        double raiz = (double) Math.sqrt( numFilas );
        int raizEntera = (int) raiz;
        double raizEnteraDouble = (double) raizEntera;
        double rango = 1/raizEnteraDouble;
        // recorre las filas de los pesduos segun rangos y guardarlos en un array
        System.out.println("la cantidad es de "+numFilas+", y la cantidad de intervalos es de: "+raizEntera );
        System.out.println("los rangos son de "+rango+" numeros");
        
        ArrayList<Integer> numIntervalos = new ArrayList<Integer>();
        int contador = 0;
        double rangoInferior = 0;
        double rangoSuperior = rango;
        System.out.println("rango inferior: es "+rangoInferior+" y superior es: "+rangoSuperior+" antes del for");
        
        for(int i = 0; i < raizEntera; i++ ){ // lo que hace la raiz es dividir el numero 1
            for(int j = 0; j < numFilas; j++){
                double num = Double.parseDouble( tabla_numerosAleatorios_.getValueAt(j, 1).toString() ); 
                System.out.println("la fila es "+j+" y el numeros es: "+num);
                System.out.println("rango inferior: es "+rangoInferior+" y superior es: "+rangoSuperior);
                if( num > rangoInferior && num < rangoSuperior ){
                    contador++;
                }
            }
            rangoInferior = rangoSuperior;
            rangoSuperior = rangoSuperior+rango;
            numIntervalos.add(contador);
            System.out.println("contador es: "+contador);
            contador = 0;       
        }
        
        double intervaloDouble, formula;
        double resultado = 0;
        for(int i = 0; i < numIntervalos.size(); i++){
            System.out.println(" cantidad de numeros en intervalo "+i+" son: "+numIntervalos.get(i));
            intervaloDouble = (double) numIntervalos.get(i);
            formula = (Math.pow(raizEnteraDouble-intervaloDouble, 2))/raizEnteraDouble;
            System.out.println("el resultado es: "+resultado+" y el valor de la formula es: "+formula);
            resultado = resultado + formula; 
        }
        resultadoGlobal = resultado;
        double alfa = ( 100 - Double.parseDouble( txt_aceptacion_.getText() ) )/100;
        System.out.println("el resultado de X^2 es: "+resultado);
        JOptionPane.showMessageDialog(null,"Cantidad de numeros: "+numFilas+", intervalos: "+raizEntera+", \n y la cantidad de numeros en el intervalo o rango es de: "+rango+". \n Digite el valor encontrado en tabla chi. (En el recuadro correspondiente)");
        
        etiq_filaChi_.setText( String.valueOf( raizEntera-1 ) );
        etiq_colChi_.setText( String.valueOf( alfa ) );
        etiq_filaChi_.setVisible(true);
        etiq_colChi_.setVisible(true);
        etiq_aceptacion_.setVisible(true);
        etiq_buscarChi1_.setVisible(true);
        etiq_buscarChi2_.setVisible(true);
        etiq_buscarChi3_.setVisible(true);
        txt_valorChi_.setVisible(true);
        
        btn_resultado_.setVisible(true);
    }
    
    public String importar(File archivo, JTable tablaD){
        
        String respuesta = "No se realizo con exito la importacion";
        DefaultTableModel modeloT = new DefaultTableModel();
        tablaD.setModel(modeloT);

        try{           
            wb = WorkbookFactory.create( new FileInputStream(archivo) );
            Sheet hoja = wb.getSheetAt(0);
            Iterator filaIterator = hoja.rowIterator();
            int indiceFila=-1;
            while( filaIterator.hasNext() ){
                indiceFila++;
                Row fila = (Row) filaIterator.next();
                Iterator columnaIterator = fila.cellIterator();
                Object[] listaColumna = new Object[5];
                int indiceColumna=-1;
                while( columnaIterator.hasNext() ){
                    indiceColumna++;
                    Cell celda = (Cell) columnaIterator.next();
                    if (indiceFila==0) {
                        modeloT.addColumn(celda.getStringCellValue());
                    } else {
                        if( celda!=null ){
                            switch( celda.getCellType() ){
                                case NUMERIC:
                                    listaColumna[indiceColumna] = (int) Math.round( celda.getNumericCellValue() );
                                    break;
                                case STRING:
                                    listaColumna[indiceColumna] = celda.getStringCellValue();
                                    break;
                                case BOOLEAN:
                                    listaColumna[indiceColumna] = celda.getBooleanCellValue();
                                    break;
                                default:
                                    listaColumna[indiceColumna] = celda.getDateCellValue();
                                    break;
                            }
                        }
                    }
                }
                if( indiceFila!=0 ){ modeloT.addRow(listaColumna); }
            }
            respuesta = "Importacion exitosa";
            tabla_numerosAleatorios_.setVisible(true);
            etiq_aceptacion_.setVisible(true);
            txt_aceptacion_.setVisible(true);
            btn_calcular_.setVisible(true);
        }catch(IOException e){
            JOptionPane.showMessageDialog(rootPane, "Error al importar datos desde archivo excel: -> "+e);
        }
        
        return respuesta;  
    }
    
    public void agregarFiltro(){     
        selecArchivo.setFileFilter( new FileNameExtensionFilter( "Excel (*.xls)","xls" )  );
        selecArchivo.setFileFilter( new FileNameExtensionFilter( "Excel (*.xlsx)","xlsx" )  );       
    } 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_calcular_;
    public javax.swing.JButton btn_importar_;
    private javax.swing.JButton btn_resultado_;
    private javax.swing.JLabel etiq_aceptacion_;
    private javax.swing.JLabel etiq_buscarChi1_;
    private javax.swing.JLabel etiq_buscarChi2_;
    private javax.swing.JLabel etiq_buscarChi3_;
    private javax.swing.JLabel etiq_colChi_;
    private javax.swing.JLabel etiq_filaChi_;
    private javax.swing.JLabel etiq_resultado_;
    private javax.swing.JLabel etiq_tituloChiCuadrado_;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tabla_numerosAleatorios_;
    private javax.swing.JTextField txt_aceptacion_;
    private javax.swing.JTextField txt_valorChi_;
    // End of variables declaration//GEN-END:variables
}
