/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.pruebas;

import javax.swing.JOptionPane;
import tipografias.Fuentes;

//librerias para exportar en excel
import java.io.*;
//import java.text.DecimalFormat;
import java.util.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.*;
//import org.apache.poi.hssf.usermodel.*;
//import org.apache.poi.xssf.usermodel.*;

//librerias que deberian ir en el controlador de excel
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author dark_
 */
public class varianza extends javax.swing.JInternalFrame {
    
      // --- VARIABLES ------------crea variables para el modelo de la tabla y el tipo de fuente del formulario

    private final Fuentes tipoFuente; // para llamar el metodo de tipografias personalizadas
    
    Workbook wb; // para trabajar importar y/o exportar archivos en xls
    
    JFileChooser selecArchivo = new JFileChooser();
    File archivo;
    int contAccion = 0;
    double resultadoGlobal;

    /**
     * Creates new form varianza
     */
    public varianza() {
        initComponents();
        
        // SE PERSONALIZA TODO EL TEXTO CON FUENTES DEL PAQUETE TIPOGRAFIA
        tipoFuente = new Fuentes(); // crea tipo de fuente para usar atributos y procedimientos
        ///----------------///----- ETIQUETAS -----///---------------///
        etiq_tituloVarianza_.setFont(tipoFuente.fuente(tipoFuente.GOD,0,24));
        etiq_resultado_.setFont(tipoFuente.fuente(tipoFuente.GOD,0,18));
        etiq_resultado_.setVisible(false);
        etiq_mediaVarianza_.setVisible(false);
        etiq_aceptacion_.setVisible(false);
        ///----------------///----- TABLAS -----///---------------///
        tabla_numerosAleatorios_.setVisible(false); 
        ///----------------///----- TEXTO -----///---------------///
        txt_mediaVarianza_.setVisible(false); 
        txt_aceptacion_.setVisible(false);
        ///----------------///----- BOTONES -----///---------------///
        btn_calcular_.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        etiq_tituloVarianza_ = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_numerosAleatorios_ = new javax.swing.JTable();
        btn_importar_ = new javax.swing.JButton();
        etiq_aceptacion_ = new javax.swing.JLabel();
        txt_mediaVarianza_ = new javax.swing.JTextField();
        btn_calcular_ = new javax.swing.JButton();
        etiq_resultado_ = new javax.swing.JLabel();
        etiq_mediaVarianza_ = new javax.swing.JLabel();
        txt_aceptacion_ = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        etiq_tituloVarianza_.setText("VARIANZA");

        tabla_numerosAleatorios_.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_numerosAleatorios_.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabla_numerosAleatorios_);

        btn_importar_.setText("IMPORTAR desde EXCEL");
        btn_importar_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_importar_ActionPerformed(evt);
            }
        });

        etiq_aceptacion_.setText("Nivel de aceptacion (solo numero no escribir %): ");

        btn_calcular_.setText("Calcular");
        btn_calcular_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_calcular_ActionPerformed(evt);
            }
        });

        etiq_resultado_.setText("jLabel1");

        etiq_mediaVarianza_.setText("Media de los numeros");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(btn_importar_))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(etiq_mediaVarianza_)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_mediaVarianza_, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiq_tituloVarianza_)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(etiq_aceptacion_)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_aceptacion_, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_calcular_))
                            .addComponent(etiq_resultado_))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etiq_tituloVarianza_)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_importar_)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiq_mediaVarianza_)
                    .addComponent(txt_mediaVarianza_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiq_aceptacion_)
                    .addComponent(txt_aceptacion_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_calcular_))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etiq_resultado_)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_importar_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_importar_ActionPerformed

        contAccion++;
        if( contAccion == 1 ){ agregarFiltro(); }

        if( selecArchivo.showDialog(null, "Seleccionar archivo" ) == JFileChooser.APPROVE_OPTION ){
            archivo = selecArchivo.getSelectedFile();
            if ( archivo.getName().endsWith("xls") || archivo.getName().endsWith("xlsx")  ) {
                JOptionPane.showMessageDialog(null, importar( archivo, tabla_numerosAleatorios_ ) ); 
            } else {
                JOptionPane.showMessageDialog( null, "Elija un formato de Excel valido" );
            }
        }
    }//GEN-LAST:event_btn_importar_ActionPerformed

    private void btn_calcular_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_calcular_ActionPerformed
        if( "".equals(txt_aceptacion_.getText()) || "".equals(txt_mediaVarianza_.getText()) ){
            JOptionPane.showMessageDialog(null, "Debe digitar el valor del nivel de aceptacion y de media (esta se puede calcular en la pesta√±a de menu correspondiente)");
        }else{
            calcular();
        } 
    }//GEN-LAST:event_btn_calcular_ActionPerformed
    
    
    // ----------- FUNCIONES Y PROCEDIMIENTOS -------------------------------------------/////////////////////////////////
     public void calcular(){
        int numFilas = tabla_numerosAleatorios_.getRowCount();
        double suma = 0;
        double restaElevada = 0;
        double media = Double.parseDouble(txt_mediaVarianza_.getText());
        for (int i = 0; i < numFilas; i++) {
            restaElevada = Math.pow( Double.parseDouble( tabla_numerosAleatorios_.getValueAt(i, 1).toString() ) - media , 2);
            suma = suma+restaElevada;
        }
        double v = suma/(numFilas-1);
        System.out.println("La suma total de los numeros de la tabla: "+suma+" y v es: "+v);
        
        double aceptacion = Double.parseDouble( txt_aceptacion_.getText() );
        double alfa = (100-aceptacion)/100;
        double colInf = (1-alfa)/2;
        double colSup = alfa/2;
        double fila = numFilas-1;
        
        Double numeroChiInf = Double.parseDouble( JOptionPane.showInputDialog(null, "PROCESO 1 (UNO). Digite el numero encontrado en la tabla chi columna (exacta o cercana a): "+colInf+" y fila (exacta o cercana a): "+fila) );
        Double numeroChiSup = Double.parseDouble( JOptionPane.showInputDialog(null, "PROCESO 2 (DOS). Digite el numero encontrado en la tabla chi columna (exacta o cercana a): "+colSup+" y fila (exacta o cercana a): "+fila) );         
        
        double limiteInferior = numeroChiInf/(12*fila);
        double limiteSuperior = numeroChiSup/(12*fila);
        
        System.out.println("el limite inferior es: "+limiteInferior+" el numero v es: "+v+" y el limite superior es: "+limiteSuperior);
        
        if( v > limiteInferior && v < limiteSuperior ){
            JOptionPane.showMessageDialog(null,"El limite inferior es: "+limiteInferior+" el numero v es: "+v+" y el limite superior es: "+limiteSuperior+", \n por lo tanto el conjunto de numeros tienen un valor esperado de 1/12 o 0.833 de varianza por lo tanto son ACEPTADOS");
            etiq_resultado_.setText("ACEPTADO!, la varianza es: "+v);
            etiq_resultado_.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(null, "El limite inferior es: "+limiteInferior+" el numero v es: "+v+" y el limite superior es: "+limiteSuperior+", \n por lo tanto el conjunto de numeros tienen un valor NO esperado de 1/12 o 0.833 de varianza por lo tanto son RECHAZADOS");
            etiq_resultado_.setText("RECHAZADO, la varianza es: "+v);
            etiq_resultado_.setVisible(true);
        }
        
    }
    
    public String importar(File archivo, JTable tablaD){
        
        String respuesta = "No se realizo con exito la importacion";
        DefaultTableModel modeloT = new DefaultTableModel();
        tablaD.setModel(modeloT);

        try{           
            wb = WorkbookFactory.create( new FileInputStream(archivo) );
            Sheet hoja = wb.getSheetAt(0);
            Iterator filaIterator = hoja.rowIterator();
            int indiceFila=-1;
            while( filaIterator.hasNext() ){
                indiceFila++;
                Row fila = (Row) filaIterator.next();
                Iterator columnaIterator = fila.cellIterator();
                Object[] listaColumna = new Object[5];
                int indiceColumna=-1;
                while( columnaIterator.hasNext() ){
                    indiceColumna++;
                    Cell celda = (Cell) columnaIterator.next();
                    if (indiceFila==0) {
                        modeloT.addColumn(celda.getStringCellValue());
                    } else {
                        if( celda!=null ){
                            switch( celda.getCellType() ){
                                case NUMERIC:
                                    listaColumna[indiceColumna] = (int) Math.round( celda.getNumericCellValue() );
                                    break;
                                case STRING:
                                    listaColumna[indiceColumna] = celda.getStringCellValue();
                                    break;
                                case BOOLEAN:
                                    listaColumna[indiceColumna] = celda.getBooleanCellValue();
                                    break;
                                default:
                                    listaColumna[indiceColumna] = celda.getDateCellValue();
                                    break;
                            }
                        }
                    }
                }
                if( indiceFila!=0 ){ modeloT.addRow(listaColumna); }
            }
            
            respuesta = "Importacion exitosa";
            tabla_numerosAleatorios_.setVisible(true);
            etiq_mediaVarianza_.setVisible(true);
            txt_mediaVarianza_.setVisible(true);
            etiq_aceptacion_.setVisible(true);
            txt_aceptacion_.setVisible(true);
            btn_calcular_.setVisible(true);
        }catch(IOException e){
            JOptionPane.showMessageDialog(rootPane, "Error al importar datos desde archivo excel: -> "+e);
        }
        
        return respuesta;  
    }
    
    public void agregarFiltro(){     
        selecArchivo.setFileFilter( new FileNameExtensionFilter( "Excel (*.xls)","xls" )  );
        selecArchivo.setFileFilter( new FileNameExtensionFilter( "Excel (*.xlsx)","xlsx" )  );       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_calcular_;
    public javax.swing.JButton btn_importar_;
    private javax.swing.JLabel etiq_aceptacion_;
    private javax.swing.JLabel etiq_mediaVarianza_;
    private javax.swing.JLabel etiq_resultado_;
    private javax.swing.JLabel etiq_tituloVarianza_;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tabla_numerosAleatorios_;
    private javax.swing.JTextField txt_aceptacion_;
    private javax.swing.JTextField txt_mediaVarianza_;
    // End of variables declaration//GEN-END:variables
}
